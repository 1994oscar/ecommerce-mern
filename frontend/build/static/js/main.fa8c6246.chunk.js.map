{"version":3,"sources":["constants/productsConstants.js","constants/cartConstants.js","constants/userConstant.js","constants/orderConstant.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducer.js","components/Header.js","actions/userAction.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/productAction.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","actions/orderAction.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdate","success","orderCreate","order","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","useEffect","a","axios","get","data","response","message","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","lenght","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","clasname","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","updateResult","Authorization","token","defaults","common","put","result","update","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxtPrice","totalPrice","length","index","variante","console","log","newOrder","messages","createOrder","orderItems","App","basename","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa8c6246.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST   = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS   = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL      = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST   = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS   = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL      = 'PRODUCT_DETAILS_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST     = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS     = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL        = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGIN_LOGOUT      = \"USER_LOGIN_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST  = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS  = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL     = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST   = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS   = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL      = \"USER_DETAILS_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST    = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS    = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL       = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET       = \"USER_UPDATE_RESET\";","export const ORDER_CREATE_REQUEST   = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS   = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL      = 'ORDER_CREATE_FAIL'","import {createStore, combineReducers, applyMiddleware} from 'redux' \r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducer, productDetailReducer}  from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateReducer} from './reducers/userReducer'\r\nimport {orderCreateReducer} from './reducers/orderReducer'\r\n\r\n//--- Redux Reducers ---\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n})\r\n//-----------------------\r\n\r\n//--- Local Storage Data ---\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n                             JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n                             JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n                             JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\n//--------------------------\r\n\r\n//--- Redux Initial State ---\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n//---------------------------\r\n\r\nconst middleWare = [thunk]\r\n\r\n//--- Redux Store ---\r\nconst store = createStore (\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleWare)))\r\n//-------------------\r\n\r\nexport default store ","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL} from '../constants/productsConstants'\r\n\r\n\r\nexport const productListReducer = (state = {products: []}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false, products: action.payload}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailReducer = (state = {product: {reviews: []}}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM: \r\n        const item = action.payload\r\n\r\n        const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n        if(existItem) {\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n            }\r\n        }else {\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, item]\r\n            }\r\n        }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {    USER_LOGIN_REQUEST,\r\n            USER_LOGIN_SUCCESS,\r\n            USER_LOGIN_FAIL,\r\n            USER_LOGIN_LOGOUT,\r\n            USER_REGISTER_REQUEST,\r\n            USER_REGISTER_SUCCESS,\r\n            USER_REGISTER_FAIL,\r\n            USER_DETAILS_REQUEST,\r\n            USER_DETAILS_SUCCESS,\r\n            USER_DETAILS_FAIL,\r\n            USER_UPDATE_REQUEST,\r\n            USER_UPDATE_SUCCESS,\r\n            USER_UPDATE_FAIL,\r\n            USER_UPDATE_RESET} from '../constants/userConstant.js'\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LOGIN_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {}}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL\r\n} from '../constants/orderConstant'\r\n\r\nconst orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n          \r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n           \r\n    }\r\n}\r\n\r\nexport  {orderCreateReducer}","import React                                    from 'react'\r\nimport {useDispatch, useSelector}              from 'react-redux'\r\nimport {LinkContainer}                          from 'react-router-bootstrap'\r\nimport {Navbar , Nav , NavDropdown, Container}  from 'react-bootstrap'\r\nimport {logout} from '../actions/userAction'\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>ProShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>\r\n                                    Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ):  <LinkContainer to='/login'>\r\n                                <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                            </LinkContainer> \r\n                        }                  \r\n                    </Nav> \r\n                </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import axios from 'axios'\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_LOGOUT, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstant\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            data: {\r\n                email, password\r\n            },\r\n            headers: {\r\n                'Content-Type': 'aplication/json'\r\n            }\r\n        }\r\n        \r\n        const {data} = await axios.post(\r\n            '/api/users/login', config);      \r\n       \r\n            dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGIN_LOGOUT})\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            data: {\r\n                name, email, password\r\n            },\r\n            headers: {\r\n                'Content-Type': 'aplication/json'\r\n            }\r\n        }\r\n     \r\n        const {data} = await axios.post('/api/users', config);      \r\n       \r\n            dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {         \r\n            headers: {\r\n                'Content-Type': 'aplication/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n       \r\n        const {data} = await axios.get(\r\n            `/api/users/${id}`, config);      \r\n       \r\n            dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const update = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        axios.defaults.headers.common['Content-Type'] = 'aplication/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n        \r\n        const result = await axios.put('/api/users/profile', {data:user});      \r\n              \r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: result.data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Container , Row , Col} from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n      \r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; ProShop  - Oscar Zúñiga\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","\r\nimport PropTypes from 'prop-types'\r\n/** \r\n *  <span>{text && text}</span> =  <span>{text ? text : ''}</span>\r\n */\r\nconst Rating = ({value, text, color}) => {\r\n\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 ? 'fas fa-star' \r\n                    : value >= 0.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2 ? 'fas fa-star' \r\n                    : value >= 1.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3 ? 'fas fa-star' \r\n                    : value >= 2.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4 ? 'fas fa-star' \r\n                    : value >= 3.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5 ? 'fas fa-star' \r\n                    : value >= 4.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n\r\n                <span>{text && text}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\n/** We specify the types of Prop that we need */\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Rating","import { Card }         from \"react-bootstrap\"\r\nimport Rating           from './Rating'\r\nimport {Link}           from 'react-router-dom'\r\n\r\n/** {product} = Props, we can destructuring the props element with the {} keys, and modify\r\n * the name, with this, we can use only the product var, and not props.product._id, for example.\r\n */\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n            <Card.Text as='div'>\r\n               <Rating \r\n               value={product.rating}\r\n               text={`${product.numReviews} reviews`} />\r\n            </Card.Text>\r\n            <Card.Text as='h3'>\r\n                ${product.price}\r\n            </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n        animation='border' \r\n        role='status' \r\n        style={{ \r\n            width: '100px', \r\n            height: '100px', \r\n            margin:'auto', \r\n            display:'block'}}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React , {useEffect} from 'react'\r\nimport Product from '../components/Product'\r\nimport {Row, Col, Container} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {listProducts} from '../actions/productAction'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\n/** This is the Home page widget */\r\n\r\nconst HomeScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products } = productList \r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch]);\r\n\r\n    //const products = []\r\n\r\n    return (\r\n       <>\r\n        <h1>Latest products</h1>\r\n        {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : \r\n        (<Row>\r\n            {products.map( (product) => (\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                   <Product product={product} />\r\n                </Col>\r\n            ))}\r\n        </Row>)  \r\n        }\r\n       </>\r\n    )\r\n\r\n}\r\n\r\nexport default HomeScreen","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL\r\n} from '../constants/productsConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get('/api/products')\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, {useState, useEffect}            from 'react'\r\nimport {Link}           from 'react-router-dom'\r\nimport Rating            from '../components/Rating'\r\nimport {Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {listProductDetails} from '../actions/productAction'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n/** This is the Product Screen Page. \r\n * \r\n * The {match} arguments can acces to the parameter that contain the URI, in the App.js files, \r\n * we pass to the /product link, the id of the product liket this /product/:id, with {match}, we can\r\n * access to the id value. \r\n */\r\n\r\nconst ProductScreen = ({history, match}) => {\r\n    const [qty, setQty] = useState(1) \r\n\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails \r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id)) \r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    return (\r\n       <>\r\n        <Link className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n        </Link>\r\n        {loading ? (<Loader/>) : error ? (<Message variant='danger'>{error}</Message>) : (\r\n            <Row>\r\n            <Col md={4}>\r\n                <Image src={product.image} alt={product.name} fluid/>\r\n            </Col>\r\n\r\n            <Col md={5}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>{product.name}</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                       <Rating \r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`} />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Price: {product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description: {product.description}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Price: \r\n                                </Col>\r\n                                <Col>\r\n                                    <strong>{product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Status: \r\n                                </Col>\r\n                                <Col>\r\n                                   {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock' }\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                        <Form.Control as='select' value={qty} onChange={(e) => \r\n                                        setQty(e.target.value)}>\r\n                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                <option key={x+1} value={x+1}>\r\n                                                    {x+1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col> \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                    onClick={addToCartHandler}\r\n                                    className='btn-block' type='button' \r\n                                    disabled={product.countInStock === 0}>\r\n                                Add to cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        \r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        )} \r\n       </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductScreen","import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart, removeFromCart} from '../actions/cartAction'\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch() \r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart \r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const  removeFromCartHandler = (id) => {\r\n       dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n          <Col md={8}>\r\n              <h1>Shopping Cart</h1>\r\n              { cartItems.lenght === 0 ? \r\n                (<Message>Your cart is empty <Link to='/'>Go Back</Link></Message>) : \r\n                (<ListGroup variant='flush'> \r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    ${item.price}\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                                            <option key={ x + 1 } value= {x + 1}>\r\n                                                { x + 1 }\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button type='button' variant='light' onClick={() => \r\n                                        removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>)}\r\n          </Col>\r\n          <Col md={4}>\r\n              <Card>\r\n                  <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                        Items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}       \r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n                  <ListGroup.Item>\r\n                      <Button \r\n                      type='button' \r\n                      className='btn-block' \r\n                      disabled={cartItems.lenght === 0}\r\n                      onClick={checkoutHandler}\r\n                      >Proceed to Checkout</Button>\r\n                  </ListGroup.Item>\r\n              </Card>\r\n          </Col>\r\n      </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import react from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs='{12}' md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default FormContainer","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../components/Message'\r\nimport Loader   from '../components/Loader'\r\nimport {login}  from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const {loading, error, userInfo} = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(()=> {    \r\n        if(userInfo){\r\n            history.push(redirect)         \r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();      \r\n        //DISPATCH LOGIN\r\n        dispatch(login(email, password))\r\n    }\r\n \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign in</h1>\r\n\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign in</Button>\r\n            </Form>\r\n\r\n            <Row clasname='py-3'>\r\n                <Col>\r\n                    New Costumer? {''}\r\n                    <Link to={ redirect ? `/register?redirect=${redirect}`:'/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../components/Message'\r\nimport Loader   from '../components/Loader'\r\nimport {register}  from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n\r\n    const [name, setName]           = useState('')\r\n    const [email, setEmail]         = useState('')\r\n    const [password, setPassword]   = useState('')\r\n    const [confirmPassword, setConfirmPassword]   = useState('')\r\n    const [message, setMessage]     = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(()=> {    \r\n        if(userInfo){\r\n            history.push(redirect)         \r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();      \r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }\r\n        //DISPATCH REGISTER\r\n        dispatch(register(name,email, password))\r\n    }\r\n \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n\r\n            {message    && <Message variant='danger'>{message}</Message>}\r\n            {error      &&   <Message variant='danger'>{error}</Message>}\r\n            {loading    && <Loader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Personal name</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Confirm the password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Create user</Button>\r\n            </Form>\r\n\r\n            <Row clasname='py-3'>\r\n                <Col>\r\n                    Have an account? {''}\r\n                    <Link to={ redirect ? `/login?redirect=${redirect}`:'/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Row, Col}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../components/Message'\r\nimport Loader   from '../components/Loader'\r\nimport {getUserDetails, update, login}  from '../actions/userAction'\r\n\r\nconst ProfileScreen = ({location, history}) => {\r\n\r\n    const [name, setName]           = useState('')\r\n    const [email, setEmail]         = useState('')\r\n    const [password, setPassword]   = useState('')\r\n    const [confirmPassword, setConfirmPassword]   = useState('')\r\n    const [message, setMessage]     = useState(null)\r\n\r\n    const dispatch      = useDispatch()\r\n\r\n    const userDetails   = useSelector(state => state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n\r\n    const userLogin     = useSelector(state => state.userLogin)\r\n    const {userInfo}    = userLogin\r\n\r\n    const userUpdateProfile     = useSelector(state => state.userUpdate)\r\n    const updateResult    = userUpdateProfile\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(()=> {    \r\n        if(!userInfo){\r\n            history.push('/login')         \r\n        }else{\r\n            if(!user.name){\r\n                dispatch(getUserDetails('profile'))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch,history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();      \r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }\r\n        //DISPATCH UPDATE PROFILE\r\n        dispatch(update({id:user._id, name, email, password}))\r\n    }\r\n\r\n    /*if(updateResult.success){\r\n        dispatch(login(updateResult.userInfo.email, updateResult.userInfo.password))\r\n    }*/\r\n \r\n    return (\r\n        <Row>\r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n\r\n            {message    && <Message variant='danger'>{message}</Message>}\r\n            {error      &&   <Message variant='danger'>{error}</Message>}\r\n            {updateResult.success    &&   <Message variant='success'>Profile Updated</Message>}\r\n            {loading    && <Loader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Personal name</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Confirm the password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='warning'>Update</Button>\r\n            </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n        </Col>\r\n    </Row>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import react from 'react'\r\n\r\nimport {Nav} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, {useState}            from 'react'\r\nimport {Form, Button}               from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport FormContainer                from '../components/FormContainer'\r\nimport CheckoutSteps                from '../components/CheckoutSteps'\r\nimport {saveShippingAddress} from '../actions/cartAction'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const [address, setAddress]         = useState(shippingAddress.address)\r\n    const [city, setCity]               = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode]   = useState(shippingAddress.postalCode)\r\n    const [country, setCountry]         = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter full address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalcode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, {useState}            from 'react'\r\nimport {Form, Button, Col}          from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport FormContainer                from '../components/FormContainer'\r\nimport CheckoutSteps                from '../components/CheckoutSteps'\r\nimport {savePaymentMethod}          from '../actions/cartAction'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal') \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                <Col>\r\n                    <Form.Check\r\n                    type='radio'\r\n                    label='Paypal or Credit Card'\r\n                    id='Paypal'\r\n                    name='paymentMethod'\r\n                    value='PayPal'\r\n                    checked\r\n                    onChange= {(e) => setPaymentMethod(e.target.value)} >                       \r\n                    </Form.Check>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, {useState, useEffect}   from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button, Row, Col, ListGroup, Image, Card}               from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message                      from '../components/Message'\r\nimport CheckoutSteps                from '../components/CheckoutSteps'\r\nimport {createOrder}                from '../actions/orderAction'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch  = useDispatch();\r\n    const cart      = useSelector(state => state.cart);\r\n \r\n   //Calculate the prices\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => \r\n                      acc + item.price * item.qty, 0);\r\n\r\n    cart.shippingPrice  = cart.itemsPrice > 100 ? 0 : 20;\r\n    cart.taxtPrice      = Number((0.15 * cart.itemsPrice).toFixed(2));\r\n    \r\n    cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxtPrice)).toFixed(2);\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const {order, success, error} = orderCreate;\r\n \r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    //Create the order\r\n    const placeOrderHandler = () => {\r\n        console.log('Place order')\r\n        dispatch(createOrder({\r\n            orderItems:         cart.cartItems,\r\n            shippingAddress:    cart.shippingAddress,\r\n            paymentMethod:      cart.paymentMethod,\r\n            itemsPrice:         cart.itemsPrice,\r\n            shippingPrice:      cart.shippingPrice,\r\n            taxtPrice:          cart.taxtPrice,\r\n            totalPrice:         cart.totalPrice,\r\n        }));\r\n    }\r\n \r\n    return (\r\n        <>\r\n           <CheckoutSteps step1 step2 step3 step4/>\r\n           <Row>\r\n               <Col md={8}>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                           <h2>Shipping</h2>\r\n                           <p>\r\n                               <strong>Address:</strong>\r\n                               {cart.shippingAddress.address},      {' '}\r\n                               {cart.shippingAddress.city},         {' '}\r\n                               {cart.shippingAddress.postalCode},   {' '}\r\n                               {cart.shippingAddress.country}\r\n                           </p>\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <h2>Payment Method</h2>\r\n                           <strong>Method: </strong>\r\n                           {cart.paymentMethod}\r\n                       </ListGroup.Item>\r\n\r\n                       <ListGroup.Item>\r\n                           <h2>Order Items</h2>\r\n                           {cart.cartItems.length === 0 ? <Message>Your Cart is empty</Message> : \r\n                           (\r\n                               <ListGroup variant='flush'>\r\n                                   {cart.cartItems.map((item, index) => (\r\n\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image \r\n                                                src={item.image} \r\n                                                alt={item.name}\r\n                                                fluid\r\n                                                rounded /> \r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = \r\n                                                ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                   ))}\r\n\r\n                               </ListGroup>\r\n                           )}\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Col>\r\n               <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                          <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxtPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup.Item>\r\n                        {error && <Message variante='danger'>{error}</Message>}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cart.cartItems === 0}\r\n                        onClick = {placeOrderHandler}>\r\n                            Place Order\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n               </Col>\r\n           </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL\r\n} from '../constants/orderConstant'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        console.log(order)\r\n        const {userLogin: {userInfo}} = getState(); \r\n        console.log(userInfo)\r\n        axios.defaults.headers.common['Content-Type']   = 'aplication/json';\r\n        axios.defaults.headers.common['Authorization']  = `Bearer ${userInfo.token}`;\r\n\r\n        const {data:newOrder} = await axios.post(`/api/orders`, order);\r\n        console.log(newOrder)\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: newOrder\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.messages \r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n","import React                            from 'react'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport {Container}                      from 'react-bootstrap'\r\nimport Header                           from './components/Header'\r\nimport Footer                           from './components/Footer'\r\nimport HomeScreen                       from './screens/HomeScreen'\r\nimport ProductScreen                    from './screens/ProductScreen'\r\nimport CartScreen                       from './screens/CartScreen'\r\nimport LoginScreen                      from './screens/LoginScreen'\r\nimport RegisterScreen                   from './screens/RegisterScreen'\r\nimport ProfileScreen                    from './screens/ProfileScreen'\r\nimport ShippingScreen                   from './screens/ShippingScreen'\r\nimport PaymentScreen                    from './screens/PaymentScreen'\r\nimport PlaceOrderScreen                 from './screens/PlaceOrderScreen'\r\n\r\n/**\r\n * App = Contain the principal structure of the aplication, all the component\r\n * are build in a individual files, then every component is import in the App.js files,\r\n * to render all the website. \r\n * \r\n * Every component need to be import of the libary where is located.\r\n * py = Padding top and bottom in the Y axes\r\n * Container = Is the container class of Boostrap, in this proyect we use\r\n * React Bootstrap and Boostwacth for the theme template, the template name is Lux. \r\n * React Bootstrap contain all the structure class, and the Lux them contain only\r\n * the css style.\r\n * \r\n * Header = The Header component that is created in the Header.js files\r\n * Footer = The Footer component that is created in the Footer.js files\r\n * \r\n * React-Router: We need to implement React Router Globally, to use in our app.\r\n * \r\n * Normally when we no use React Router we put the name of the component that we need to show, \r\n * like <HomeScreen />, with react router we can put the router of this component. \r\n * \r\n * <Route path = '/' component={HomeScreen} exact />\r\n * \r\n * We can use how many <Route /> component web need.\r\n * \r\n * path='/product/:id', :id is the ID of the product, that we pass in the Link in <Product /> component, \r\n * here in the App.js file, we create the Route to Link the products dinamically\r\n * \r\n */\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Header/>\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/'             component={HomeScreen} exact />\r\n          <Route path='/login'        component={LoginScreen} />\r\n          <Route path='/register'     component={RegisterScreen} />\r\n          <Route path='/profile'      component={ProfileScreen} />\r\n          <Route path='/product/:id'  component={ProductScreen} />\r\n          <Route path='/cart/:id?'    component={CartScreen} />\r\n          <Route path='/shipping'     component={ShippingScreen} />\r\n          <Route path='/payment'      component={PaymentScreen} />\r\n          <Route path='/placeorder'   component={PlaceOrderScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}