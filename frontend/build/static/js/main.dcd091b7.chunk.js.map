{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productsConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducer.js","constants/userConstant.js","reducers/orderReducer.js","constants/orderConstant.js","components/SearchBox.js","components/Header.js","actions/userAction.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productAction.js","components/Message.js","components/Loader.js","components/Paginate.js","screens/HomeScreen.js","screens/product/ProductScreen.js","screens/product/ProductListScreen.js","components/FormContainer.js","screens/product/ProductEditScreen.js","actions/cartAction.js","screens/checkout/CartScreen.js","screens/user/LoginScreen.js","screens/user/UserListScreen.js","screens/user/RegisterScreen.js","actions/orderAction.js","screens/user/ProfileScreen.js","screens/user/UserEditScreen.js","components/CheckoutSteps.js","screens/checkout/ShippingScreen.js","screens/checkout/PaymentScreen.js","screens/checkout/PlaceOrderScreen.js","components/order/OrderItems.js","components/order/ShippingDetails.js","components/order/PaymentMethod.js","components/order/OrderSummary.js","screens/checkout/OrderScreen.js","helpers/orderHelpers.js","screens/order/OrderListAdminScreen.js","screens/order/OrderAdminDetails.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","success","productListAdmin","productCreateAdmin","productUpdateAdmin","message","productCreateReview","productDeleteAdmin","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdate","userList","userUpdateAdmin","userDelete","orderCreate","order","orderGet","orderItems","orderPay","orderGetMy","orders","orderGetAdmin","orderSetDeliveredAdmin","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","dispatch","useDispatch","useSelector","logoutHandler","removeItem","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","render","Nav","Link","isAdmin","NavDropdown","title","Item","onClick","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProductDetails","a","axios","get","data","response","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","HomeScreen","match","params","pageNumber","useEffect","listProducts","sm","md","lg","xl","ProductScreen","productId","qty","setQty","setRating","comment","setComment","productReviewCreate","reviewLoading","reviewSuccess","reviewError","reviewMessage","Image","alt","fluid","ListGroup","description","countInStock","disabled","length","review","createdAt","substring","r","getState","defaults","headers","common","token","post","createProductReview","Group","controlId","Label","row","ProductListScreen","productsList","productCreate","createSuccess","productData","createError","deleteProduct","deleteSuccess","deleteError","deleteMessage","listProductsAdmin","deleteProductHandler","userId","window","confirm","delete","Table","striped","bordered","hover","responsive","category","brand","FormContainer","xs","ProductEditScreen","setName","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","getProductState","updateProductState","updateLoading","updateSuccess","updateError","updateMessage","uploadHandler","file","files","formData","FormData","append","console","put","updatedProduct","updateProductAdmin","File","label","custom","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","lenght","rounded","reduce","acc","toFixed","LoginScreen","email","setEmail","password","setPassword","redirect","config","login","clasname","UserListScreen","users","deleteUserError","deleteUserSuccess","deleteUserMessage","deleteUserLoading","deleteUserHandler","href","RegisterScreen","confirmPassword","setConfirmPassword","setMessage","register","getOrderById","messages","ProfileScreen","updateResult","loadingOrders","errorOrders","Authorization","result","update","totalPrice","isPaid","paidAt","isDelivered","UserEditScreen","idUser","setIsAdmin","updateUserAdmin","Check","checked","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","PlaceOrderScreen","itemsPrice","shippingPrice","taxtPrice","index","variante","newOrder","createOrder","OrderItems","ShippingDetails","deliveredAt","PaymentMethod","OrderSummary","paypalSdkReady","loadingPay","successPaymentHandler","amount","onSuccess","OrderScreen","orderId","setPaypalSdkReady","getOrder","successPay","priceCalculation","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","paymentResult","log","payOrder","OrderListAdminScreen","getOrders","OrderAdminDetails","setAsDelivered","deliveredSuccess","App","basename","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.dcd091b7.chunk.js","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux' \r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducer, productDetailReducer, productListAdminReducer, \r\n        productDeleteAdminReducer, productCreateAdminReducer, productUpdateAdminReducer, productReviewCreateReducer}  from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateReducer,\r\n         userListReducer, userInfoReducer, userDeleteReducer, userUpdateAdminReducer} from './reducers/userReducer'\r\nimport {orderCreateReducer, orderGetReducer, orderPayReducer, orderListMyReducer, orderGetAdminReducer, orderSetDeliveredAdminReducer} from './reducers/orderReducer'\r\n\r\n/** --- Redux Reducers --- */\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailReducer,\r\n    productListAdmin: productListAdminReducer,\r\n    productCreateAdmin: productCreateAdminReducer,\r\n    productUpdateAdmin: productUpdateAdminReducer,\r\n    productCreateReview: productReviewCreateReducer,\r\n    productDeleteAdmin: productDeleteAdminReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userList: userListReducer,\r\n    userInfo: userInfoReducer,\r\n    userUpdateAdmin: userUpdateAdminReducer,\r\n    userDelete: userDeleteReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderGet: orderGetReducer,\r\n    orderPay: orderPayReducer,\r\n    orderGetMy: orderListMyReducer,\r\n    orderGetAdmin: orderGetAdminReducer,\r\n    orderSetDeliveredAdmin: orderSetDeliveredAdminReducer,\r\n\r\n});\r\n\r\n\r\n/** --- Local Storage Data --- */\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n                             JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n                             JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n                             JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\n\r\n\r\n/** --- Redux Initial State --- */\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n\r\n\r\nconst middleWare = [thunk];\r\n\r\n/** --- Redux Store --- */\r\nconst store = createStore (\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleWare)));\r\n\r\n\r\nexport default store ","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, \r\n    PRODUCT_LIST_ADMIN_REQUEST, \r\n    PRODUCT_LIST_ADMIN_SUCCESS, \r\n    PRODUCT_LIST_ADMIN_FAIL, \r\n    PRODUCT_DELETE_ADMIN_REQUEST,\r\n    PRODUCT_DELETE_ADMIN_SUCCESS, \r\n    PRODUCT_DELETE_ADMIN_FAIL, \r\n    PRODUCT_CREATE_ADMIN_REQUEST,\r\n     PRODUCT_CREATE_ADMIN_SUCCESS, \r\n     PRODUCT_CREATE_ADMIN_FAIL, \r\n     PRODUCT_CREATE_ADMIN_RESET, \r\n     PRODUCT_UPDATE_ADMIN_REQUEST, \r\n     PRODUCT_UPDATE_ADMIN_FAIL,\r\n      PRODUCT_UPDATE_ADMIN_SUCCESS, \r\n      PRODUCT_UPDATE_ADMIN_RESET,\r\n      PRODUCT_CREATE_REVIEW_REQUEST,\r\n      PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      PRODUCT_CREATE_REVIEW_FAIL,\r\n      PRODUCT_CREATE_REVIEW_RESET\r\n} from '../constants/productsConstants'\r\n\r\n\r\nexport const productListReducer = (state = {products: []}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false, \r\n                    products: action.payload.products, \r\n                    pages: action.payload.pages, \r\n                    page: action.payload.page\r\n                }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailReducer = (state = {product: {reviews: []}}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, success:true, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productListAdminReducer = (state = {products: []}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_LIST_ADMIN_REQUEST:\r\n            return {loading: true, products: []}\r\n        case PRODUCT_LIST_ADMIN_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                success:true,\r\n                products: action.payload.products, \r\n                pages: action.payload.pages, \r\n                page: action.payload.page}\r\n        case PRODUCT_LIST_ADMIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateAdminReducer = (state = {product:[]}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_CREATE_ADMIN_REQUEST:\r\n            return {loading: true}\r\n        case PRODUCT_CREATE_ADMIN_SUCCESS:\r\n            return {loading: false, success:true, product: action.payload}\r\n        case PRODUCT_CREATE_ADMIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_ADMIN_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateAdminReducer = (state = {product:{}}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_UPDATE_ADMIN_REQUEST:\r\n            return {loading: true}\r\n        case PRODUCT_UPDATE_ADMIN_SUCCESS:\r\n            return {loading: false, success:true, product: action.payload, message: action.message}\r\n        case PRODUCT_UPDATE_ADMIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_UPDATE_ADMIN_RESET:\r\n            return {}\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const productDeleteAdminReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DELETE_ADMIN_REQUEST:\r\n            return {loading: true}\r\n        case PRODUCT_DELETE_ADMIN_SUCCESS:\r\n            return {loading: false, success:true, message: action.payload}\r\n        case PRODUCT_DELETE_ADMIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading: true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading: false, success:true, message: action.payload}\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n             return {}\r\n        default:\r\n            return state\r\n    }\r\n}","export const PRODUCT_LIST_REQUEST   = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS   = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL      = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST   = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS   = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL      = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_LIST_ADMIN_REQUEST   = 'PRODUCT_LIST_ADMIN_REQUEST'\r\nexport const PRODUCT_LIST_ADMIN_SUCCESS   = 'PRODUCT_LIST_ADMIN_SUCCESS'\r\nexport const PRODUCT_LIST_ADMIN_FAIL      = 'PRODUCT_LIST_ADMIN_FAIL'\r\n\r\nexport const PRODUCT_CREATE_ADMIN_REQUEST   = 'PRODUCT_CREATE_ADMIN_REQUEST'\r\nexport const PRODUCT_CREATE_ADMIN_SUCCESS   = 'PRODUCT_CREATE_ADMIN_SUCCESS'\r\nexport const PRODUCT_CREATE_ADMIN_FAIL      = 'PRODUCT_CREATE_ADMIN_FAIL'\r\nexport const PRODUCT_CREATE_ADMIN_RESET     = 'PRODUCT_CREATE_ADMIN_RESET'\r\n\r\nexport const PRODUCT_UPDATE_ADMIN_REQUEST   = 'PRODUCT_UPDATE_ADMIN_REQUEST'\r\nexport const PRODUCT_UPDATE_ADMIN_SUCCESS   = 'PRODUCT_UPDATE_ADMIN_SUCCESS'\r\nexport const PRODUCT_UPDATE_ADMIN_FAIL      = 'PRODUCT_UPDATE_ADMIN_FAIL'\r\nexport const PRODUCT_UPDATE_ADMIN_RESET     = 'PRODUCT_UPDATE_ADMIN_RESET'\r\n\r\nexport const PRODUCT_DELETE_ADMIN_REQUEST   = 'PRODUCT_DELETE_ADMIN_REQUEST'\r\nexport const PRODUCT_DELETE_ADMIN_SUCCESS   = 'PRODUCT_DELETE_ADMIN_SUCCESS'\r\nexport const PRODUCT_DELETE_ADMIN_FAIL      = 'PRODUCT_DELETE_ADMIN_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST   = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS   = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL      = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET      = 'PRODUCT_CREATE_REVIEW_RESET'\r\n","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM: \r\n        const item = action.payload\r\n\r\n        const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n        if(existItem) {\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n            }\r\n        }else {\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, item]\r\n            }\r\n        }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_INFO_REQUEST,\r\n    USER_INFO_SUCCESS,\r\n    USER_INFO_FAIL, USER_UPDATE_ADMIN_REQUEST, USER_UPDATE_ADMIN_SUCCESS, USER_UPDATE_ADMIN_FAIL\r\n} from '../constants/userConstant.js'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LOGIN_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {}}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n        return {user: {}}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n          \r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {userList:[]}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true}\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, success: true, userList: action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LIST_RESET: \r\n            return {userList:[]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userInfoReducer = (state = {user:{}}, action) => {\r\n    switch (action.type) {\r\n        case USER_INFO_REQUEST:\r\n            return {loading: true}\r\n        case USER_INFO_SUCCESS:\r\n            return {loading:false, success: true, user: action.payload}\r\n        case USER_INFO_FAIL: \r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateAdminReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_UPDATE_ADMIN_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_ADMIN_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n        case USER_UPDATE_ADMIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true}\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading:false, success: true, message: action.payload}\r\n        case USER_DELETE_FAIL: \r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const USER_LOGIN_REQUEST     = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS     = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL        = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGIN_LOGOUT      = \"USER_LOGIN_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST  = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS  = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL     = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST   = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS   = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL      = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET     = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_REQUEST    = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS    = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL       = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET      = \"USER_UPDATE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST    = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS    = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL       = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET      = \"USER_LIST_RESET\";\r\n\r\nexport const USER_INFO_REQUEST  = \"USER_INFO_REQUEST\";\r\nexport const USER_INFO_SUCCESS  = \"USER_INFO_SUCCESS\";\r\nexport const USER_INFO_FAIL     = \"USER_INFO_FAIL\";\r\n\r\nexport const USER_UPDATE_ADMIN_REQUEST  = \"USER_UPDATE_ADMIN_REQUEST\";\r\nexport const USER_UPDATE_ADMIN_SUCCESS  = \"USER_UPDATE_ADMIN_SUCCESS\";\r\nexport const USER_UPDATE_ADMIN_FAIL     = \"USER_UPDATE_ADMIN_FAIL\";\r\n\r\nexport const USER_DELETE_REQUEST  = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS  = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL     = \"USER_DELETE_FAIL\";","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_GET_REQUEST,\r\n    ORDER_GET_SUCCESS,\r\n    ORDER_GET_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_GET_ADMIN_REQUEST,\r\n    ORDER_GET_ADMIN_SUCCESS,\r\n    ORDER_GET_ADMIN_FAIL,\r\n    ORDER_SET_DELIVERED_ADMIN_REQUEST,\r\n    ORDER_SET_DELIVERED_ADMIN_SUCCESS,\r\n    ORDER_SET_DELIVERED_ADMIN_FAIL\r\n} from '../constants/orderConstant'\r\n\r\nconst orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n          \r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n           \r\n    }\r\n}\r\n\r\nconst orderGetReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_GET_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n          \r\n        case ORDER_GET_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_GET_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n           \r\n    }\r\n}\r\n\r\nconst orderPayReducer = (state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {             \r\n                loading: true,\r\n            }\r\n          \r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET: \r\n            return {}\r\n\r\n        default:\r\n            return state;    \r\n    }\r\n}\r\n\r\nconst orderListMyReducer = (state = {orders: []}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {             \r\n                loading: true,\r\n                success: false,\r\n            }\r\n          \r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: []}\r\n\r\n        default:\r\n            return state;    \r\n    }\r\n}\r\n\r\n\r\nconst orderGetAdminReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_GET_ADMIN_REQUEST:\r\n            return {\r\n                loading: true,\r\n                success: false,\r\n            }\r\n          \r\n        case ORDER_GET_ADMIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_GET_ADMIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n                success: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n           \r\n    }\r\n}\r\n\r\n\r\nconst orderSetDeliveredAdminReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_SET_DELIVERED_ADMIN_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n          \r\n        case ORDER_SET_DELIVERED_ADMIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_SET_DELIVERED_ADMIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n                success: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n           \r\n    }\r\n}\r\n\r\nexport  {orderCreateReducer, orderGetReducer, \r\n            orderPayReducer, orderListMyReducer, \r\n            orderGetAdminReducer, orderSetDeliveredAdminReducer}","export const ORDER_CREATE_REQUEST   = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS   = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL      = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_GET_REQUEST      = 'ORDER_GET_REQUEST';\r\nexport const ORDER_GET_SUCCESS      = 'ORDER_GET_SUCCESS';\r\nexport const ORDER_GET_FAIL         = 'ORDER_GET_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST      = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS      = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL         = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET        = 'ORDER_PAY_RESET';\r\n\r\n\r\nexport const ORDER_LIST_MY_REQUEST      = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS      = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL         = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET         = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_GET_ADMIN_REQUEST      = 'ORDER_GET_ADMIN_REQUEST';\r\nexport const ORDER_GET_ADMIN_SUCCESS      = 'ORDER_GET_ADMIN_SUCCESS';\r\nexport const ORDER_GET_ADMIN_FAIL         = 'ORDER_GET_ADMIN_FAIL';\r\n\r\nexport const ORDER_SET_DELIVERED_ADMIN_REQUEST      = 'ORDER_SET_DELIVERED_ADMIN_REQUEST';\r\nexport const ORDER_SET_DELIVERED_ADMIN_SUCCESS      = 'ORDER_SET_DELIVERED_ADMIN_SUCCESS';\r\nexport const ORDER_SET_DELIVERED_ADMIN_FAIL         = 'ORDER_SET_DELIVERED_ADMIN_FAIL';","import React, { useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nconst SearchBox = ({history}) => {\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`);\r\n        }else{\r\n            history.push('/');\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e)=> setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-primary' className='p-2'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React                                    from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {useDispatch, useSelector}              from 'react-redux'\r\nimport {LinkContainer}                          from 'react-router-bootstrap'\r\nimport {Navbar , Nav , NavDropdown, Container}  from 'react-bootstrap'\r\nimport {logout} from '../actions/userAction'\r\nimport SearchBox from './SearchBox'\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    }\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>ProShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Route render={({history})=> <SearchBox history={history}/>} />\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo && !userInfo.isAdmin && (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>\r\n                                    Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        )\r\n                        }\r\n                        {userInfo && userInfo.isAdmin && (\r\n                              <NavDropdown title= 'Admin' id='userAdmin'>\r\n                              <LinkContainer to='/admin/users-list'>\r\n                                  <NavDropdown.Item>Users</NavDropdown.Item>\r\n                              </LinkContainer>\r\n                              <LinkContainer to='/admin/products-list'>\r\n                                  <NavDropdown.Item>Products</NavDropdown.Item>\r\n                              </LinkContainer>\r\n                              <LinkContainer to='/admin/orders-list'>\r\n                                  <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                              </LinkContainer>\r\n                              <NavDropdown.Item onClick={logoutHandler}>\r\n                                  Logout\r\n                              </NavDropdown.Item>\r\n                          </NavDropdown>\r\n                        ) }  \r\n                        \r\n                        {!userInfo && \r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                            </LinkContainer>  \r\n                        }               \r\n                    </Nav> \r\n                </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import axios from 'axios'\r\nimport {\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_INFO_FAIL,\r\n    USER_INFO_REQUEST,\r\n    USER_INFO_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_LOGOUT,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS, USER_UPDATE_ADMIN_FAIL,\r\n    USER_UPDATE_ADMIN_REQUEST, USER_UPDATE_ADMIN_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstant\"\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstant'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            data: {\r\n                email, password\r\n            },\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const {data} = await axios.post(\r\n            '/api/users/login', config);      \r\n       \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({type: USER_LOGIN_LOGOUT});\r\n    dispatch({type: USER_DETAILS_RESET});\r\n    dispatch({type: USER_LIST_RESET});\r\n    dispatch({type: ORDER_LIST_MY_RESET});\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            data: {\r\n                name, email, password\r\n            },\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n     \r\n        const {data} = await axios.post('/api/users', config);      \r\n       \r\n            dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {         \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n       \r\n        const {data} = await axios.get(\r\n            `/api/users/${id}`, config);      \r\n       \r\n            dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const update = (user) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type']  = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n        \r\n        const result = await axios.put('/api/users/profile', {data:user});      \r\n              \r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: result.data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data:userList} = await axios.get('/api/users');\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: userList\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserById = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_INFO_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data:user} = await axios.get(`/api/users/${id}`);\r\n\r\n        dispatch({\r\n            type: USER_INFO_SUCCESS,\r\n            payload: user\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_INFO_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserAdmin = (data) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_ADMIN_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type']  = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data:user} = await axios.put(`/api/users/${data.idUser}`, {data});\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_ADMIN_SUCCESS,\r\n            payload: user\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        \r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        });\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type'] = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data} = await axios.delete(`/api/users/${id}`);\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data.message \r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Container , Row , Col} from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n      \r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; ProShop  - Oscar Zúñiga\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n/** \r\n *  <span>{text && text}</span> =  <span>{text ? text : ''}</span>\r\n */\r\nconst Rating = ({value, text, color}) => {\r\n\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 ? 'fas fa-star' \r\n                    : value >= 0.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2 ? 'fas fa-star' \r\n                    : value >= 1.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3 ? 'fas fa-star' \r\n                    : value >= 2.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4 ? 'fas fa-star' \r\n                    : value >= 3.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5 ? 'fas fa-star' \r\n                    : value >= 4.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}>\r\n                    </i>\r\n            </span>\r\n\r\n                <span>{text && text}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\n/** We specify the types of Prop that we need */\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card }         from \"react-bootstrap\"\r\nimport Rating           from './Rating'\r\nimport {Link}           from 'react-router-dom'\r\n\r\n/** {product} = Props, we can destructuring the props element with the {} keys, and modify\r\n * the name, with this, we can use only the product var, and not props.product._id, for example.\r\n */\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n            <Card.Text as='div'>\r\n               <Rating \r\n               value={product.rating}\r\n               text={`${product.numReviews} reviews`} />\r\n            </Card.Text>\r\n            <Card.Text as='h3'>\r\n                ${product.price}\r\n            </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_LIST_ADMIN_REQUEST,\r\n    PRODUCT_LIST_ADMIN_SUCCESS, \r\n    PRODUCT_LIST_ADMIN_FAIL, \r\n    PRODUCT_DELETE_ADMIN_REQUEST,\r\n    PRODUCT_DELETE_ADMIN_SUCCESS, \r\n    PRODUCT_DELETE_ADMIN_FAIL, \r\n    PRODUCT_CREATE_ADMIN_REQUEST, \r\n    PRODUCT_CREATE_ADMIN_SUCCESS, \r\n    PRODUCT_CREATE_ADMIN_FAIL, \r\n    PRODUCT_UPDATE_ADMIN_REQUEST, \r\n    PRODUCT_UPDATE_ADMIN_SUCCESS, \r\n    PRODUCT_UPDATE_ADMIN_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL\r\n} from '../constants/productsConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        \r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n\r\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST});\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n                     error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listProductsAdmin = (keyword = '', pageNumber = '') => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_ADMIN_REQUEST});\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type']  = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data} = await axios.get(`/api/products/admin?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductsAdmin = () => async (dispatch, getState) => {\r\n    try {\r\n       \r\n        dispatch({type: PRODUCT_CREATE_ADMIN_REQUEST})\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type']  = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data} = await axios.post('/api/products/admin');\r\n     \r\n        dispatch({\r\n            type: PRODUCT_CREATE_ADMIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const updateProductAdmin = (product) => async (dispatch, getState) => {\r\n    try {\r\n       \r\n        dispatch({type: PRODUCT_UPDATE_ADMIN_REQUEST})\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type']  = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data} = await axios.put(`/api/products/admin/${product._id}`, {data:product} );\r\n       \r\n        dispatch({\r\n            type: PRODUCT_UPDATE_ADMIN_SUCCESS,\r\n            payload: data.updatedProduct,\r\n            message: data.message\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n       \r\n        dispatch({type: PRODUCT_CREATE_REVIEW_REQUEST})\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type']  = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data} = await axios.post(`/api/products/${productId}/reviews`, {data:review});\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data.message\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteProductAdmin = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DELETE_ADMIN_REQUEST})\r\n\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        axios.defaults.headers.common['Content-Type']  = 'application/json';\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n\r\n        const {data} = await axios.delete(`/api/products/admin/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_ADMIN_SUCCESS,\r\n            payload: data.message\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n        animation='border' \r\n        role='status' \r\n        style={{ \r\n            width: '100px', \r\n            height: '100px', \r\n            margin:'auto', \r\n            display:'block'}}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport {Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({pages, page, isAdmin = false, keyword = ''}) => {\r\n    return pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map(x => (\r\n                    <LinkContainer \r\n                    key={ x + 1} \r\n                    to={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` \r\n                    : `/page/${x+1}` : `/admin/products-list/:${x+1}`}>\r\n                        <Pagination.Item active={x + 1 === page}>{x+1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React , {useEffect}          from 'react'\r\nimport Product                      from '../components/Product'\r\nimport {Row, Col}                   from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport {listProducts}               from '../actions/productAction'\r\nimport Message                      from '../components/Message'\r\nimport Loader                       from '../components/Loader'\r\nimport Paginate                     from '../components/Paginate'\r\n\r\nconst HomeScreen = ({match}) => {\r\n\r\n    const keyword = match.params.keyword;\r\n    const pageNumber = match.params.pageNumber || 1;\r\n   \r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList \r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n       <>\r\n        <h1>Latest products</h1>\r\n        {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : \r\n        (\r\n        <>\r\n        <Row>\r\n            {products.map( (product) => (\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                   <Product product={product} />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n        <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n        </>)  \r\n        }\r\n       </>\r\n    )\r\n\r\n}\r\n\r\nexport default HomeScreen","import React, {useState, useEffect}            from 'react'\r\nimport {Link}           from 'react-router-dom'\r\nimport Rating            from '../../components/Rating'\r\nimport {Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {listProductDetails, createProductReview} from '../../actions/productAction'\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productsConstants'\r\n\r\nconst ProductScreen = ({history, match}) => {\r\n    const productId = match.params.id;\r\n    const [qty, setQty]         = useState(1);  \r\n    const [rating, setRating]   = useState(0);  \r\n    const [comment, setComment] = useState(\"\");  \r\n\r\n    const dispatch = useDispatch(); \r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin; \r\n\r\n    const productDetails = useSelector(state => state.productDetails); \r\n    const {loading, error, product} = productDetails;  \r\n\r\n    const productReviewCreate = useSelector(state => state.productCreateReview);\r\n    const {loading:reviewLoading, success:reviewSuccess, error:reviewError, message:reviewMessage} = productReviewCreate;\r\n\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_REVIEW_RESET});\r\n        dispatch(listProductDetails(productId));   \r\n    }, [dispatch, match, reviewSuccess]); \r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`); \r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const newReview = {rating, comment};\r\n       dispatch(createProductReview(productId, newReview));\r\n    }\r\n    return (\r\n       <>\r\n        <Link className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n        </Link>\r\n        {loading ? (<Loader/>) : error ? (<Message variant='danger'>{error}</Message>) : (\r\n            <>\r\n            <Row>\r\n            <Col md={4}>\r\n                <Image src={product.image} alt={product.name} fluid/>\r\n            </Col>\r\n\r\n            <Col md={5}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>{product.name}</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                       <Rating \r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`} />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Price: {product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description: {product.description}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Price: \r\n                                </Col>\r\n                                <Col>\r\n                                    <strong>{product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Status: \r\n                                </Col>\r\n                                <Col>\r\n                                   {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock' }\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                        <Form.Control as='select' value={qty} onChange={(e) => \r\n                                        setQty(e.target.value)}>\r\n                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                <option key={x+1} value={x+1}>\r\n                                                    {x+1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col> \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                    onClick={addToCartHandler}\r\n                                    className='btn-block' type='button' \r\n                                    disabled={product.countInStock === 0}>\r\n                                Add to cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        \r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {product.reviews.length === 0 && <Message>No reviews</Message>}\r\n                <ListGroup variant='flush'>\r\n                    {product.reviews.map(review => (\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} />\r\n                            <p>{review.createdAt.substring(0,10)}</p>\r\n                            <p>{review.comment}</p>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                    <ListGroup.Item>\r\n                        {reviewLoading && <Loader />} \r\n                        {reviewError && <Message variant='danger'>{reviewError}</Message>}\r\n                        {reviewSuccess && <Message variant='success'>{reviewMessage}</Message>}\r\n                        <h2>Write a Customer Review</h2> \r\n                        {userInfo && !product.reviews.find(r => r.user === userInfo._id) ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control \r\n                                    as='select' \r\n                                    value={rating} \r\n                                    onChange={(e)=>setRating(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='1'>1 - Poor</option>\r\n                                        <option value='2'>2 - Fair</option>\r\n                                        <option value='3'>3 - Good</option>\r\n                                        <option value='4'>4 - Very Good</option>\r\n                                        <option value='5'>5 - Excellent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='comment'>\r\n                                    <Form.Label>Comment</Form.Label>\r\n                                    <Form.Control as='textarea' \r\n                                    row={3} value={comment} \r\n                                    onChange={(e)=>setComment(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' variant='primary'>Send comment</Button>\r\n                            </Form>\r\n                        ) : !product.reviews.find(r => r.user === userInfo._id) ? \r\n                            <Message>Please <Link to='/login'>sign in</Link>to write a review</Message> \r\n                            : <Message>You already have a review of this product</Message> }\r\n                    </ListGroup.Item>\r\n                </ListGroup>                                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n        )} \r\n       </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductScreen","import React, {useEffect}           from 'react'\r\nimport {LinkContainer}              from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col}              from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from \"react-redux\"\r\nimport Message                      from '../../components/Message'\r\nimport Loader                       from '../../components/Loader'\r\nimport {listProductsAdmin,createProductsAdmin, deleteProductAdmin}          from \"../../actions/productAction\"\r\nimport {PRODUCT_CREATE_ADMIN_RESET } from '../../constants/productsConstants'\r\nimport Paginate from '../../components/Paginate'\r\n\r\nconst ProductListScreen = ({match, history}) => { \r\n\r\n    const pageNumber = match.params.pageNumber; \r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    const productsList = useSelector(state => state.productListAdmin);\r\n    const {loading, success, error, products, page, pages} = productsList;\r\n\r\n    const productCreate = useSelector(state => state.productCreateAdmin);\r\n    const {success:createSuccess, product:productData, error:createError} = productCreate; \r\n    \r\n    const deleteProduct = useSelector(state => state.productDeleteAdmin);\r\n    const {success:deleteSuccess, error:deleteError, message: deleteMessage} = deleteProduct;\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch({type:PRODUCT_CREATE_ADMIN_RESET }); \r\n       \r\n        if(!userInfo || !userInfo.isAdmin){\r\n            history.push('/login');\r\n        }\r\n\r\n        if(createSuccess){\r\n            history.push(`/admin/products/edit/${productData._id}`); \r\n        }else{\r\n            dispatch(listProductsAdmin({keyword: '', pageNumber}));\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, deleteSuccess, createSuccess, productData, pageNumber]);\r\n\r\n    const deleteProductHandler = (userId) => {\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteProductAdmin(userId));\r\n        }\r\n \r\n    }\r\n\r\n    const createProductHandler = (e) => {\r\n        e.preventDefault();      \r\n        dispatch(createProductsAdmin());       \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Products</h1>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading    && <Loader/>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {deleteSuccess && <Message variant='success'>{deleteMessage}</Message>}\r\n            {deleteError && <Message variant='danger'>{deleteError}</Message>}\r\n            {createError && <Message variant='danger'>{createError}</Message>}\r\n            {success && (\r\n                <>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Stock</th>\r\n                        <th>Category</th>\r\n                        <th>Brand</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{`$${product.price}`}</td>\r\n                                <td>{product.countInStock}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/products/edit/${product._id}`}>\r\n                                        <Button variant='warning' className='btn-sm'> <i className='fas fa-edit'></i> </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={ () => deleteProductHandler(product._id)}><i className='fas fa-trash'></i></Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs='{12}' md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default FormContainer","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../../components/Message'\r\nimport Loader   from '../../components/Loader'\r\nimport {listProductDetails} from '../../actions/productAction'\r\n\r\nimport FormContainer from '../../components/FormContainer'\r\nimport {updateProductAdmin} from '../../actions/productAction'\r\n\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const productId = match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n\r\n    const getProductState = useSelector(state => state.productDetails);\r\n    const {loading, error, product} = getProductState;\r\n\r\n    const updateProductState = useSelector(state => state.productUpdateAdmin);\r\n    const {loading:updateLoading, success:updateSuccess, error:updateError, product:updatedProduct, message:updateMessage} = updateProductState; \r\n\r\n    useEffect(()=>{\r\n        if(!product.name || product._id !== productId){\r\n            dispatch(listProductDetails(productId));\r\n        }else{\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setImage(product.image);\r\n            setBrand(product.brand);\r\n            setCategory(product.category);\r\n            setCountInStock(product.countInStock);\r\n            setDescription(product.description);\r\n        }\r\n\r\n        if(updateSuccess){\r\n            dispatch(listProductDetails(productId));\r\n        }\r\n\r\n    }, [dispatch, product, productId, updateSuccess]);\r\n\r\n\r\n    const uploadHandler = async (e) => {\r\n       const file = e.target.files[0];\r\n       const formData = new FormData();\r\n       formData.append('image', file);\r\n       setUploading(true);\r\n\r\n       try {\r\n        axios.defaults.headers.common['Content-Type']  = 'multipart/form-data';\r\n       \r\n        const {data} = await axios.post('/api/upload', formData);\r\n        setImage(data);\r\n        setUploading(false);\r\n       } catch (error) {\r\n           console.error(error); \r\n           setUploading(false); \r\n       }\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const product = {_id: productId, name,price,image,brand,category,countInStock,description};\r\n        dispatch(updateProductAdmin(product));\r\n    } \r\n\r\n    return (\r\n        <>\r\n        {updateLoading && <Loader/>}\r\n        {updateError && <Message variant='danger'>{updateError}</Message>}\r\n        {updateSuccess && <Message variant='success'>{updateMessage}</Message>}\r\n        <Link to='/admin/products-list' className='btn btn-light my-3'>Go Back</Link>\r\n        {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>:  (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Product name</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Product brand</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter product brand'\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Product category</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter product category'\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Product description</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter product description'\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>Product price</Form.Label>\r\n                    <Form.Control \r\n                        type='number'\r\n                        placeholder='Enter product price'\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='stock'>\r\n                    <Form.Label>Product stock</Form.Label>\r\n                    <Form.Control \r\n                        type='number'\r\n                        placeholder='Enter product stock'\r\n                        value={countInStock}\r\n                        onChange={(e) => setCountInStock(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Product image</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter image url'\r\n                        value={image}\r\n                        onChange={(e) => setImage(e.target.value)}>\r\n                    </Form.Control>\r\n                    <Form.File \r\n                        id='image-file' \r\n                        label='Choose File'\r\n                        custom\r\n                        onChange={uploadHandler}>\r\n                        </Form.File>\r\n                        {uploading && <Loader />}\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Save</Button>\r\n            </Form>\r\n            </FormContainer>\r\n            )}\r\n   </> )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport Message from '../../components/Message'\r\nimport {addToCart, removeFromCart} from '../../actions/cartAction'\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart; \r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const  removeFromCartHandler = (id) => {\r\n       dispatch(removeFromCart(id));\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping');\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n          <Col md={8}>\r\n              <h1>Shopping Cart</h1>\r\n              { cartItems.lenght === 0 ? \r\n                (<Message>Your cart is empty <Link to='/'>Go Back</Link></Message>) : \r\n                (<ListGroup variant='flush'> \r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    ${item.price}\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                                            <option key={ x + 1 } value= {x + 1}>\r\n                                                { x + 1 }\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button type='button' variant='light' onClick={() => \r\n                                        removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>)}\r\n          </Col>\r\n          <Col md={4}>\r\n              <Card>\r\n                  <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                        Items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}       \r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n                  <ListGroup.Item>\r\n                      <Button \r\n                      type='button' \r\n                      className='btn-block' \r\n                      disabled={cartItems.lenght === 0}\r\n                      onClick={checkoutHandler}\r\n                      >Proceed to Checkout</Button>\r\n                  </ListGroup.Item>\r\n              </Card>\r\n          </Col>\r\n      </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../../components/Message'\r\nimport Loader   from '../../components/Loader'\r\nimport {login}  from '../../actions/userAction'\r\nimport FormContainer from '../../components/FormContainer'\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n\r\n    const [email, setEmail] = useState(''); \r\n    const [password, setPassword] = useState(''); \r\n    const dispatch = useDispatch(); \r\n\r\n    const userLogin = useSelector(state => state.userLogin); \r\n\r\n    const {loading, error, userInfo} = userLogin; \r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'; \r\n\r\n    useEffect(()=> {    \r\n        if(userInfo){\r\n            history.push(redirect);         \r\n        }\r\n    }, [history, userInfo, redirect]); \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();      \r\n       \r\n        dispatch(login(email, password)); \r\n    }\r\n \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign in</h1>\r\n\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign in</Button>\r\n            </Form>\r\n\r\n            <Row clasname='py-3'>\r\n                <Col>\r\n                    New Costumer? {''}\r\n                    <Link to={ redirect ? `/register?redirect=${redirect}`:'/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, {useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport {getUserList, deleteUser} from \"../../actions/userAction\"\r\n\r\n\r\nconst UserListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const users = useSelector(state => state.userList);\r\n    const {userList, success, loading, error} = users;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const {error: deleteUserError, \r\n        success: deleteUserSuccess, \r\n        message:deleteUserMessage, \r\n        loading:deleteUserLoading} = userDelete; \r\n\r\n    useEffect(() => {\r\n\r\n        /** Only admin user can access to users list */\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(getUserList());\r\n        }else {\r\n            history.push('/login'); \r\n        }\r\n\r\n    }, [dispatch, history, deleteUserSuccess, userInfo]);\r\n\r\n    const deleteUserHandler = (userId) => {\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteUser(userId));\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading            && <Loader/>}\r\n            {error              && <Message variant='danger'>{error}</Message>}\r\n            {deleteUserLoading  && <Loader/>}\r\n            {deleteUserError    && <Message variant='danger'>{deleteUserError}</Message>}\r\n            {deleteUserSuccess  && <Message variant='success'>{deleteUserMessage}</Message>}\r\n            {success            && (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Admin</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            userList.map(user => (\r\n                                <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:{user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    <span style={user.isAdmin ? {color:'green'}: {color:'blue'}}>\r\n                                        {user.isAdmin ? 'Admin': 'User'}\r\n                                    </span>\r\n                                </td>\r\n                                {user.isAdmin? (<td></td>) : \r\n                                    (\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='warning' className='btn-sm'> <i className='fas fa-edit'></i></Button>\r\n                                            </LinkContainer>\r\n                                            <Button variant='danger' \r\n                                                    className='btn-sm' \r\n                                                    onClick={()=>deleteUserHandler(user._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>                 \r\n                                    )}\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../../components/Message'\r\nimport Loader   from '../../components/Loader'\r\nimport {register}  from '../../actions/userAction'\r\nimport FormContainer from '../../components/FormContainer'\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n\r\n    const [name, setName]           = useState('')\r\n    const [email, setEmail]         = useState('')\r\n    const [password, setPassword]   = useState('')\r\n    const [confirmPassword, setConfirmPassword]   = useState('')\r\n    const [message, setMessage]     = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(()=> {    \r\n        if(userInfo){\r\n            history.push(redirect);         \r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();      \r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match');\r\n        }\r\n       \r\n        dispatch(register(name,email, password));\r\n    }\r\n \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n\r\n            {message    && <Message variant='danger'>{message}</Message>}\r\n            {error      && <Message variant='danger'>{error}</Message>}\r\n            {loading    && <Loader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Personal name</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Confirm the password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Create user</Button>\r\n            </Form>\r\n\r\n            <Row clasname='py-3'>\r\n                <Col>\r\n                    Have an account? {''}\r\n                    <Link to={ redirect ? `/login?redirect=${redirect}`:'/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","    import {\r\n        ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS,\r\n        ORDER_CREATE_FAIL,    ORDER_GET_REQUEST,\r\n        ORDER_GET_SUCCESS,    ORDER_GET_FAIL,\r\n        ORDER_PAY_REQUEST,    ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_GET_ADMIN_SUCCESS,\r\n        ORDER_GET_ADMIN_REQUEST,\r\n        ORDER_GET_ADMIN_FAIL,\r\n        ORDER_SET_DELIVERED_ADMIN_REQUEST,\r\n        ORDER_SET_DELIVERED_ADMIN_SUCCESS,\r\n        ORDER_SET_DELIVERED_ADMIN_FAIL\r\n    } from '../constants/orderConstant'\r\n    import axios from 'axios'\r\n\r\n    export const createOrder = (order) => async (dispatch, getState) => {\r\n\r\n        try {\r\n\r\n            dispatch({\r\n                type: ORDER_CREATE_REQUEST\r\n            });\r\n\r\n            const {userLogin: {userInfo}} = getState(); \r\n\r\n            axios.defaults.headers.common['Content-Type']   = 'application/json';\r\n            axios.defaults.headers.common['Authorization']  = `Bearer ${userInfo.token}`;\r\n         \r\n            const {data:newOrder} = await axios.post(`/api/orders`, order);\r\n        \r\n            dispatch({\r\n                type: ORDER_CREATE_SUCCESS,\r\n                payload: newOrder\r\n            });\r\n\r\n        } catch (error) {\r\n        \r\n            dispatch({\r\n                type: ORDER_CREATE_FAIL,\r\n                payload: error.response && error.response.data.messages \r\n                ? error.response.data.message\r\n                : error.message,\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    export const getOrderById = (id) => async (dispatch, getState) => {\r\n        \r\n        try {\r\n\r\n            dispatch({\r\n                type: ORDER_GET_REQUEST\r\n            });\r\n        \r\n            const {userLogin: {userInfo}} = getState(); \r\n            axios.defaults.headers.common['Content-Type']   = 'application/json';\r\n            axios.defaults.headers.common['Authorization']  = `Bearer ${userInfo.token}`;\r\n            \r\n          \r\n            const {data:order} = await axios.get(`/api/orders/${id}`);\r\n\r\n            dispatch({\r\n                type: ORDER_GET_SUCCESS,\r\n                payload: order \r\n            });\r\n\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ORDER_GET_FAIL,\r\n                payload: error.response && error.response.data.messages \r\n                ? error.response.data.message\r\n                : error.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    export const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n        \r\n        try {\r\n\r\n            dispatch({\r\n                type: ORDER_PAY_REQUEST\r\n            });\r\n        \r\n            const {userLogin: {userInfo}} = getState(); \r\n            axios.defaults.headers.common['Content-Type']   = 'application/json';\r\n            axios.defaults.headers.common['Authorization']  = `Bearer ${userInfo.token}`;\r\n            \r\n            \r\n            const {data:order} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult);\r\n\r\n            dispatch({\r\n                type: ORDER_PAY_SUCCESS, \r\n                payload: order \r\n            });\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ORDER_PAY_FAIL,\r\n                payload: error.response && error.response.data.messages \r\n                ? error.response.data.message\r\n                : error.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getMyOrders = () => async (dispatch, getState) => {\r\n        \r\n        try {\r\n\r\n            dispatch({\r\n                type: ORDER_LIST_MY_REQUEST\r\n            });\r\n        \r\n            const {userLogin: {userInfo}} = getState(); \r\n            axios.defaults.headers.common['Content-Type']   = 'application/json';\r\n            axios.defaults.headers.common['Authorization']  = `Bearer ${userInfo.token}`;\r\n                      \r\n            const {data:orders} = await axios.get(`/api/orders/myorders`);\r\n\r\n            dispatch({\r\n                type: ORDER_LIST_MY_SUCCESS, \r\n                payload: orders\r\n            });\r\n\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ORDER_LIST_MY_FAIL,\r\n                payload: error.response && error.response.data.messages \r\n                ? error.response.data.message\r\n                : error.message,\r\n            });\r\n        }\r\n    }\r\n    export const getOrdersAdmin = () => async (dispatch, getState) => {\r\n        \r\n        try {\r\n\r\n            dispatch({\r\n                type: ORDER_GET_ADMIN_REQUEST\r\n            });\r\n        \r\n            const {userLogin: {userInfo}} = getState(); \r\n            axios.defaults.headers.common['Content-Type']   = 'application/json';\r\n            axios.defaults.headers.common['Authorization']  = `Bearer ${userInfo.token}`;\r\n                      \r\n            const {data:orders} = await axios.get(`/api/orders/admin`);\r\n            console.log(orders)\r\n            dispatch({\r\n                type: ORDER_GET_ADMIN_SUCCESS, \r\n                payload: orders\r\n            });\r\n\r\n\r\n        } catch (error) { \r\n            dispatch({\r\n                type: ORDER_GET_ADMIN_FAIL,\r\n                payload: error.response && error.response.data.messages \r\n                ? error.response.data.message\r\n                : error.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    export const setAsDeliveredAdmin = (id) => async (dispatch, getState) => {\r\n        \r\n        try {\r\n\r\n            dispatch({\r\n                type: ORDER_SET_DELIVERED_ADMIN_REQUEST\r\n            });\r\n        \r\n            const {userLogin: {userInfo}} = getState(); \r\n            axios.defaults.headers.common['Content-Type']   = 'application/json';\r\n            axios.defaults.headers.common['Authorization']  = `Bearer ${userInfo.token}`;\r\n                    \r\n            await axios.put(`/api/orders/admin/${id}/deliver`);\r\n           \r\n            dispatch({\r\n                type: ORDER_SET_DELIVERED_ADMIN_SUCCESS,\r\n            });\r\n\r\n\r\n        } catch (error) { \r\n            dispatch({\r\n                type: ORDER_SET_DELIVERED_ADMIN_FAIL,\r\n                payload: error.response && error.response.data.messages \r\n                ? error.response.data.message\r\n                : error.message,\r\n            });\r\n        }\r\n    }","import React, {useState, useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Form, Button, Row, Col, Table}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../../components/Message'\r\nimport Loader   from '../../components/Loader'\r\nimport {getUserDetails, update, login}  from '../../actions/userAction'\r\nimport {getMyOrders} from '../../actions/orderAction'\r\n\r\nconst ProfileScreen = ({history}) => {\r\n\r\n    const dispatch      = useDispatch();\r\n\r\n    const [name, setName]           = useState('');\r\n    const [email, setEmail]         = useState('');\r\n    const [password, setPassword]   = useState('');\r\n    const [confirmPassword, setConfirmPassword]   = useState('');\r\n    const [message, setMessage]     = useState(null);\r\n\r\n    const userDetails   = useSelector(state => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    const userLogin     = useSelector(state => state.userLogin);\r\n    const {userInfo}    = userLogin;\r\n\r\n    const userUpdateProfile     = useSelector(state => state.userUpdate);\r\n    const updateResult    = userUpdateProfile;\r\n\r\n    const orderGetMy = useSelector(state => state.orderGetMy);\r\n    const {orders, success:successOrders, loading:loadingOrders, error:errorOrders} = orderGetMy;\r\n\r\n    useEffect(()=> {    \r\n        if(!userInfo){\r\n            history.push('/login');         \r\n        }else{\r\n            if(!user.name){\r\n                dispatch(getUserDetails('profile'));                   \r\n            }else{ \r\n                setName(user.name);\r\n                setEmail(user.email);           \r\n            }\r\n        }\r\n      \r\n    }, [dispatch,history, userInfo, user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyOrders());\r\n    }, [dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();      \r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }\r\n\r\n        dispatch(update({id:user._id, name, email, password}))\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n\r\n            {message    && <Message variant='danger'>{message}</Message>}\r\n            {error      &&   <Message variant='danger'>{error}</Message>}\r\n            {updateResult.success    &&   <Message variant='success'>Profile Updated</Message>}\r\n            {loading    && <Loader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Personal name</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        placeholder='Confirm the password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='warning'>Update</Button>\r\n            </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? <Loader/> : \r\n             errorOrders ? <Message variant='danger'>{errorOrders}</Message> :\r\n             (\r\n                 <Table striped bordered hover responsive className='table-sm'>\r\n                     <thead>\r\n                         <tr>\r\n                             <th>ID</th>\r\n                             <th>DATE</th>\r\n                             <th>TOTAL</th>\r\n                             <th>PAID</th>\r\n                             <th>DELIVERED</th>\r\n                             <th></th>\r\n                         </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                             {\r\n                                orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt: (\r\n                                            <i className='fas fa-times' style={{color:'red'}}> Not Paid</i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered? 'Delivered':  (\r\n                                             <i className='fas fa-times' style={{color:'red'}}> Not Delivered</i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light'>Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr> \r\n                                ))\r\n                             }\r\n                         </tbody>                 \r\n                 </Table>\r\n             )}\r\n        </Col>\r\n    </Row>   \r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button}     from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message  from '../../components/Message'\r\nimport Loader   from '../../components/Loader'\r\nimport {getUserById, updateUserAdmin}  from '../../actions/userAction'\r\nimport FormContainer from '../../components/FormContainer'\r\n\r\nconst UserEditScreen = ({location, match}) => {\r\n\r\n    const idUser = match.params.id;\r\n    const [name, setName]           = useState('');\r\n    const [email, setEmail]         = useState('');\r\n    const [isAdmin, setIsAdmin]     = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userInfo = useSelector(state => state.userInfo);\r\n    const {loading, success, user} = userInfo;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdateAdmin);\r\n    const {loading:updateLoading, error:updateError, success:updateSuccess} = userUpdate;\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        dispatch(getUserById(match.params.id));\r\n    },[dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setIsAdmin(user.isAdmin);\r\n        }\r\n    },[success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const data = {idUser, name, email, isAdmin};\r\n        dispatch(updateUserAdmin(data));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n\r\n            {updateSuccess    && <Message variant='success'>'The user was updated'</Message>}\r\n            {updateError      && <Message variant='danger'>{updateError}</Message>}\r\n            {loading          && <Loader/>}\r\n            {updateLoading    && <Loader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Personal name</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isAdmin'>\r\n                    <Form.Check\r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Save changes</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React from 'react'\r\n\r\nimport {Nav} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, {useState}            from 'react'\r\nimport {Form, Button}               from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport FormContainer                from '../../components/FormContainer'\r\nimport CheckoutSteps                from '../../components/CheckoutSteps'\r\nimport {saveShippingAddress} from '../../actions/cartAction'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const cart = useSelector(state => state.cart); \r\n    const {shippingAddress} = cart\r\n\r\n    const [address, setAddress]         = useState(shippingAddress.address); \r\n    const [city, setCity]               = useState(shippingAddress.city); \r\n    const [postalCode, setPostalCode]   = useState(shippingAddress.postalCode); \r\n    const [country, setCountry]         = useState(shippingAddress.country); \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault(); \r\n        dispatch(saveShippingAddress({address, city, postalCode, country})); \r\n        history.push('/payment'); \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter full address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalcode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, {useState}            from 'react'\r\nimport {Form, Button, Col}          from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport FormContainer                from '../../components/FormContainer'\r\nimport CheckoutSteps                from '../../components/CheckoutSteps'\r\nimport {savePaymentMethod}          from '../../actions/cartAction'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const cart = useSelector(state => state.cart); \r\n    const {shippingAddress} = cart; \r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping'); \r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');  \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault(); \r\n        dispatch(savePaymentMethod(paymentMethod)); \r\n        history.push('/placeorder'); \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                <Col>\r\n                    <Form.Check\r\n                    type='radio'\r\n                    label='Paypal or Credit Card'\r\n                    id='Paypal'\r\n                    name='paymentMethod'\r\n                    value='PayPal'\r\n                    checked\r\n                    onChange= {(e) => setPaymentMethod(e.target.value)} >                       \r\n                    </Form.Check>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect}   from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button, Row, Col, ListGroup, Image, Card}               from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message                      from '../../components/Message'\r\nimport CheckoutSteps                from '../../components/CheckoutSteps'\r\nimport {createOrder}                from '../../actions/orderAction'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch  = useDispatch();\r\n    const cart      = useSelector(state => state.cart); \r\n \r\n   //Calculate the prices\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => \r\n                      acc + item.price * item.qty, 0);\r\n\r\n    cart.shippingPrice  = cart.itemsPrice > 100 ? 0 : 20;\r\n    cart.taxtPrice      = Number((0.15 * cart.itemsPrice).toFixed(2));\r\n    \r\n    cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxtPrice)).toFixed(2);\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const {order, success, error} = orderCreate;\r\n \r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems:         cart.cartItems,\r\n            shippingAddress:    cart.shippingAddress,\r\n            paymentMethod:      cart.paymentMethod,\r\n            itemsPrice:         cart.itemsPrice,\r\n            shippingPrice:      cart.shippingPrice,\r\n            taxtPrice:          cart.taxtPrice,\r\n            totalPrice:         cart.totalPrice,\r\n        }));\r\n    }\r\n \r\n    return (\r\n        <>\r\n           <CheckoutSteps step1 step2 step3 step4/>\r\n           <Row>\r\n               <Col md={8}>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                           <h2>Shipping</h2>\r\n                           <p>\r\n                               <strong>Address:</strong>\r\n                               {cart.shippingAddress.address},      {' '}\r\n                               {cart.shippingAddress.city},         {' '}\r\n                               {cart.shippingAddress.postalCode},   {' '}\r\n                               {cart.shippingAddress.country}\r\n                           </p>\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <h2>Payment Method</h2>\r\n                           <strong>Method: </strong>\r\n                           {cart.paymentMethod}\r\n                       </ListGroup.Item>\r\n\r\n                       <ListGroup.Item>\r\n                           <h2>Order Items</h2>\r\n                           {cart.cartItems.length === 0 ? <Message>Your Cart is empty</Message> : \r\n                           (\r\n                               <ListGroup variant='flush'>\r\n                                   {cart.cartItems.map((item, index) => (\r\n\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image \r\n                                                src={item.image} \r\n                                                alt={item.name}\r\n                                                fluid\r\n                                                rounded /> \r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = \r\n                                                ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                   ))}\r\n\r\n                               </ListGroup>\r\n                           )}\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Col>\r\n               <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                          <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxtPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup.Item>\r\n                        {error && <Message variante='danger'>{error}</Message>}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cart.cartItems === 0}\r\n                        onClick ={placeOrderHandler}>\r\n                            Place Order\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n               </Col>\r\n           </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React from 'react'\r\nimport { ListGroup, Row, Col, Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../Message'\r\n\r\nconst OrderItems = ({order}) => {\r\n    return (\r\n        <ListGroup.Item>\r\n        <h2>Order Items</h2>\r\n        {order.orderItems.length === 0 ? <Message>Your Cart is empty</Message> : \r\n        (\r\n            <ListGroup variant='flush'>\r\n                {order.orderItems.map((item, index) => (\r\n\r\n                <ListGroup.Item key={index}>\r\n                    <Row>\r\n                        <Col md={1}>\r\n                            <Image \r\n                            src={item.image} \r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded /> \r\n                        </Col>\r\n                        <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                            </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            {item.qty} x ${item.price} = \r\n                            ${item.qty * item.price}\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                ))}\r\n\r\n            </ListGroup>\r\n        )}\r\n    </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default OrderItems\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport Message from '../Message'\r\n\r\nconst ShippingDetails = ({order}) => {\r\n    return (\r\n        <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p><strong>Name: </strong>{order.user.name}</p>\r\n                        <p><strong>Email: </strong><a href={`mailto:${order.email}`}>{order.email}</a></p>\r\n                        <p>\r\n                            <strong>Address:</strong>\r\n                            {order.shippingAddress.address},      {' '}\r\n                            {order.shippingAddress.city},         {' '}\r\n                            {order.shippingAddress.postalCode},   {' '}\r\n                            {order.shippingAddress.country}\r\n                        </p>\r\n                        {\r\n                            order.isDelivered ? \r\n                            (<Message variant='success'>\r\n                                Delivered on: {order.deliveredAt}\r\n                            </Message>) : \r\n                            (<Message variant='danger'>\r\n                                Not Delivered  \r\n                            </Message>)\r\n                        }\r\n                    </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default ShippingDetails\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport Message from '../Message'\r\n\r\nconst PaymentMethod = ({order}) => {\r\n    return (\r\n        <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>                         \r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                        </p>\r\n                        {\r\n                            order.isPaid ? \r\n                            (<Message variant='success'>\r\n                                Paid on: {order.paidAt}\r\n                            </Message>) : \r\n                            (<Message variant='danger'>\r\n                                Not paid \r\n                            </Message>)\r\n                        }\r\n                       \r\n                    </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod\r\n","import React from 'react'\r\nimport { Col, ListGroup, Row } from 'react-bootstrap'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Loader from '../Loader'\r\n\r\nconst OrderSummary = ({order, paypalSdkReady, loadingPay, successPaymentHandler}) => {\r\n    return (\r\n        <>\r\n        <ListGroup.Item>\r\n        <h2>Order Summary</h2>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <Row>\r\n            <Col>Items</Col>\r\n            <Col>${order.itemsPrice}</Col>\r\n        </Row>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <Row>\r\n            <Col>Shipping</Col>\r\n            <Col>${order.shippingPrice}</Col>\r\n        </Row>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <Row>\r\n            <Col>Tax</Col>\r\n            <Col>${order.taxtPrice}</Col>\r\n        </Row>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <Row>\r\n            <Col>Total</Col>\r\n            <Col>${order.totalPrice}</Col>\r\n        </Row>\r\n    </ListGroup.Item>\r\n    {!order.isPaid && (\r\n        <ListGroup.Item>\r\n            {loadingPay && (<Loader />)}\r\n            {!paypalSdkReady ? \r\n            (<Loader />) :\r\n            ( <PayPalButton \r\n              amount = {order.totalPrice}\r\n              onSuccess = {successPaymentHandler}\r\n              /> \r\n            )}\r\n        </ListGroup.Item>\r\n    )}</>\r\n    )\r\n}\r\n\r\nexport default OrderSummary\r\n","import React, {useState, useEffect}   from 'react'\r\nimport axios from 'axios'\r\nimport {Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message                      from '../../components/Message'\r\nimport Loader                       from '../../components/Loader'\r\nimport {getOrderById, payOrder}               from '../../actions/orderAction'\r\nimport {ORDER_PAY_RESET} from '../../constants/orderConstant'\r\nimport OrderItems from '../../components/order/OrderItems'\r\nimport ShippingDetails from '../../components/order/ShippingDetails'\r\nimport PaymentMethod from '../../components/order/PaymentMethod'\r\nimport OrderSummary from '../../components/order/OrderSummary'\r\n\r\nimport { priceCalculation } from '../../helpers/orderHelpers'\r\n\r\nconst OrderScreen = ({match}) => {\r\n    const dispatch  = useDispatch();\r\n    const orderId = match.params.id; \r\n\r\n    const [paypalSdkReady, setPaypalSdkReady] = useState(false);\r\n \r\n\r\n    /** Order Details from Redux*/\r\n    const getOrder = useSelector(state => state.orderGet);\r\n    const {order, loading, error} = getOrder; \r\n\r\n    /** Order Pay from Redux */\r\n    const orderPay = useSelector( state => state.orderPay);\r\n    const {success: successPay, loading: loadingPay} = orderPay; \r\n\r\n    /** Price calculation */\r\n    if(!loading){\r\n        priceCalculation(order);\r\n    }\r\n  \r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const {data:clientId} = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type= 'text/javascript';\r\n            script.src =  `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setPaypalSdkReady(true);\r\n            }\r\n            document.body.appendChild(script);\r\n        }\r\n     \r\n        if(!order || successPay){\r\n            dispatch({type: ORDER_PAY_RESET}); \r\n            dispatch(getOrderById(orderId));\r\n        } else if(!order.isPaid){\r\n            if(!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setPaypalSdkReady(true);\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, orderId, successPay, order]);\r\n\r\n    /** Paypal success handler */\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch( payOrder(orderId, paymentResult)); \r\n    }\r\n \r\n    return loading ? \r\n        <Loader /> : \r\n        error ? \r\n        <Message variant='danger'>{error}</Message> : \r\n    \r\n        <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>                \r\n                    <ShippingDetails    order={order} />\r\n                    <PaymentMethod      order={order} />\r\n                    <OrderItems         order={order} />\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                       <OrderSummary  \r\n                        order={order} \r\n                        loadingPay = {loadingPay} \r\n                        paypalSdkReady={paypalSdkReady} \r\n                        successPaymentHandler={successPaymentHandler} />\r\n                    </ListGroup>\r\n                </Card>  \r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n","\r\nexport const priceCalculation = (order) => {  \r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => \r\n                          acc + item.price * item.qty, 0);\r\n    \r\n        order.shippingPrice  = order.itemsPrice > 100 ? 0 : 20;\r\n        order.taxtPrice      = Number((0.15 * order.itemsPrice).toFixed(2));\r\n\r\n        return order;       \r\n}","import React, {useEffect}           from 'react'\r\nimport {LinkContainer}              from 'react-router-bootstrap'\r\nimport {Table, Button}              from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from \"react-redux\"\r\nimport Message                      from '../../components/Message'\r\nimport Loader                       from '../../components/Loader'\r\nimport {getOrdersAdmin}             from '../../actions/orderAction'\r\n\r\nconst OrderListAdminScreen = ({history}) => { \r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    const getOrders = useSelector(state => state.orderGetAdmin);\r\n    const {success, loading, error, orders} = getOrders;\r\n   \r\n    useEffect(() => { \r\n      \r\n        if(!userInfo.isAdmin){\r\n            history.push('/login');\r\n        }\r\n\r\n        dispatch(getOrdersAdmin()); \r\n\r\n    }, [dispatch, history, userInfo]);  \r\n\r\n    \r\n    return (\r\n        <>\r\n            <h1>Orders</h1>           \r\n            {loading && <Loader />}\r\n            {success && (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>User</th>\r\n                        <th>Total Price</th>\r\n                        <th>Paid</th>\r\n                        <th>Delivered</th>\r\n                        <th>Payment Method</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{`$${order.totalPrice}`}</td>\r\n                                <td><span style={order.isPaid ? {color:'green'}: {color:'red'}}>{order.isPaid ? \"Paid\": \"Not Paid\"}</span></td>\r\n                                <td><span style={order.isDelivered ? {color:'green'}: {color:'red'}}>{order.isDelivered ? \"Delivered\": \"Not Delivered\"}</span></td>\r\n                                <td>{order.paymentMethod}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/order/details/${order._id}`}>\r\n                                        <Button variant='info' className='btn-sm'> <i className='fas fa-eye'></i> </Button>\r\n                                    </LinkContainer>                                  \r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListAdminScreen","\r\nimport React, {useEffect}   from 'react'\r\n\r\nimport {Row, Col, ListGroup, Image, Card, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector}   from 'react-redux'\r\nimport Message                      from '../../components/Message'\r\nimport Loader                       from '../../components/Loader'\r\nimport {getOrderById, payOrder}               from '../../actions/orderAction'\r\nimport {ORDER_PAY_RESET} from '../../constants/orderConstant'\r\nimport OrderItems from '../../components/order/OrderItems'\r\nimport ShippingDetails from '../../components/order/ShippingDetails'\r\nimport PaymentMethod from '../../components/order/PaymentMethod'\r\nimport {setAsDeliveredAdmin} from '../../actions/orderAction'\r\n\r\nconst OrderAdminDetails = ({match}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderId = match.params.id; \r\n\r\n    const getOrder = useSelector(state => state.orderGet);\r\n    const {order, loading, error} = getOrder; \r\n\r\n    const setAsDelivered = useSelector(state => state.orderSetDeliveredAdmin);\r\n    const {loading:deliveredLoading, success:deliveredSuccess, error:deliveredError} = setAsDelivered;\r\n\r\n    useEffect(()=> {\r\n\r\n        if(!order || deliveredSuccess){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch(getOrderById(orderId));\r\n        }\r\n    },[dispatch, deliveredSuccess]); \r\n\r\n    const setDeliveredHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(setAsDeliveredAdmin(orderId));\r\n    }\r\n\r\n    return (\r\n        loading ? \r\n        <Loader /> : \r\n        error ? \r\n        <Message variant='danger'>{error}</Message> : \r\n    \r\n        <Row>\r\n            <Col md={4}>   \r\n            <ListGroup variant='flush'>         \r\n                <OrderItems         order={order} />\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <ListGroup variant='flush'>                \r\n                    <ShippingDetails    order={order} />\r\n                    <Button disabled={!order.isPaid ? true : order.isDelivered ? true : false} variant='primary' onClick={setDeliveredHandler}>Set as delivered</Button>               \r\n                </ListGroup> \r\n            </Col>\r\n            <Col md={4}>\r\n                <ListGroup variant='flush'>\r\n                    <PaymentMethod order={order} />\r\n                </ListGroup>                 \r\n            </Col>           \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default OrderAdminDetails\r\n","import React                            from 'react'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport {Container}                      from 'react-bootstrap'\r\nimport Header                           from './components/Header'\r\nimport Footer                           from './components/Footer'\r\nimport HomeScreen                       from './screens/HomeScreen'\r\nimport ProductScreen                    from './screens/product/ProductScreen'\r\nimport ProductListScreen                from \"./screens/product/ProductListScreen\"\r\nimport ProductEditScreen                from \"./screens/product/ProductEditScreen\"\r\nimport CartScreen                       from './screens/checkout/CartScreen'\r\nimport LoginScreen                      from './screens/user/LoginScreen'\r\nimport UserListScreen                   from './screens/user/UserListScreen'\r\nimport RegisterScreen                   from './screens/user/RegisterScreen'\r\nimport ProfileScreen                    from './screens/user/ProfileScreen'\r\nimport UserEditScreen                   from './screens/user/UserEditScreen'\r\nimport ShippingScreen                   from './screens/checkout/ShippingScreen'\r\nimport PaymentScreen                    from './screens/checkout/PaymentScreen'\r\nimport PlaceOrderScreen                 from './screens/checkout/PlaceOrderScreen'\r\nimport OrderScreen                      from './screens/checkout/OrderScreen'\r\nimport OrderListAdminScreen             from './screens/order/OrderListAdminScreen'\r\nimport OrderAdminDetails                from './screens/order/OrderAdminDetails'\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Header/>\r\n      <main className='py-3'>\r\n        <Container>\r\n         \r\n          <Route path='/'                                 component={HomeScreen} exact/>\r\n          <Route path='/search/:keyword'                  component={HomeScreen} exact/>\r\n          <Route path='/page/:pageNumber'                 component={HomeScreen} exact />\r\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route path='/login'        component={LoginScreen}/>\r\n          <Route path='/register'     component={RegisterScreen}/>\r\n          <Route path='/profile'      component={ProfileScreen}/>\r\n          <Route path='/product/:id'  component={ProductScreen}/>\r\n          <Route path='/cart/:id?'    component={CartScreen}/>\r\n          <Route path='/shipping'     component={ShippingScreen}/>\r\n          <Route path='/payment'      component={PaymentScreen}/>\r\n          <Route path='/placeorder'   component={PlaceOrderScreen}/>\r\n          <Route path='/order/:id'    component={OrderScreen}/>\r\n\r\n          <Route path='/admin/orders-list' component={OrderListAdminScreen } />\r\n          <Route path='/admin/order/details/:id' component={OrderAdminDetails} />\r\n\r\n          <Route path='/admin/users-list' component={UserListScreen}/>\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\r\n\r\n          <Route path='/admin/products-list' component={ProductListScreen} exact/>\r\n          <Route path='/admin/products-list/:pageNumber' component={ProductListScreen} exact/>\r\n          <Route path='/admin/products/edit/:id' component={ProductEditScreen}/>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}